name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker authentication
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT_ID }}/e-cercise-backend
          docker build -t $IMAGE_NAME:$GITHUB_SHA .
          docker push $IMAGE_NAME:$GITHUB_SHA

      - name: Deploy to Google Cloud Run with Secrets
        run: |
          gcloud run deploy e-cercise-backend \
            --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}/e-cercise-backend:$GITHUB_SHA \
            --platform=managed \
            --region=asia-southeast1 \
            --allow-unauthenticated \
            --port=8888 \
            --add-cloudsql-instances=${{ secrets.CLOUD_SQL_CONNECTION_NAME }} \
            --set-env-vars "DATABASE_PORT=${{ secrets.DATABASE_PORT }},DATABASE_HOST=/cloudsql/${{ secrets.CLOUD_SQL_CONNECTION_NAME }},DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }},DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }},DATABASE_NAME=${{ secrets.DATABASE_NAME }},JWT_SECRET=${{ secrets.JWT_SECRET }},FRONTEND_BASE_URL=${{ secrets.FRONTEND_BASE_URL }},CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }},CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }},CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}"